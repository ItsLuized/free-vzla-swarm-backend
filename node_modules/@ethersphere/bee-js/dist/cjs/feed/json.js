"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setJsonData = exports.getJsonData = void 0;
const type_1 = require("../utils/type");
function serializeJson(data) {
    try {
        const jsonString = JSON.stringify(data);
        return new TextEncoder().encode(jsonString);
    }
    catch (e) {
        if ((0, type_1.isError)(e)) {
            e.message = `JsonFeed: ${e.message}`;
        }
        throw e;
    }
}
function getJsonData(bee, reader) {
    return __awaiter(this, void 0, void 0, function* () {
        const feedUpdate = yield reader.download();
        const retrievedData = yield bee.downloadData(feedUpdate.reference);
        return retrievedData.json();
    });
}
exports.getJsonData = getJsonData;
function setJsonData(bee, writer, postageBatchId, data, options) {
    return __awaiter(this, void 0, void 0, function* () {
        const serializedData = serializeJson(data);
        const { reference } = yield bee.uploadData(postageBatchId, serializedData, options);
        return writer.upload(postageBatchId, reference);
    });
}
exports.setJsonData = setJsonData;
